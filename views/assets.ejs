<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <script src="http://127.0.0.1:3000/socket.io/socket.io.js"></script>

  <style>
    body {
      margin: 0;
      font-family: Arial
    }

    .topnav {
      overflow: hidden;
      background-color: #333;
    }

    .topnav a {
      float: left;
      display: block;
      color: #f2f2f2;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
      font-size: 17px;
    }

    .active {
      background-color: #31d2f2;
      color: white;
    }

    .topnav .icon {
      display: none;
    }

    .topnav-right {
      float: right;
    }

    .dropdown {
      float: left;
      overflow: hidden;
    }

    .dropdown .dropbtn {
      font-size: 17px;
      border: none;
      outline: none;
      color: white;
      padding: 14px 16px;
      background-color: inherit;
      font-family: inherit;
      margin: 0;
    }

    .dropdown-content {
      display: none;
      position: absolute;
      background-color: #f9f9f9;
      min-width: 160px;
      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
      z-index: 1;
    }

    .dropdown-content a {
      float: none;
      color: black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
      text-align: left;
    }

    .topnav a:hover,
    .dropdown:hover .dropbtn {
      background-color: #555;
      color: white;
    }

    .dropdown-content a:hover {
      background-color: #ddd;
      color: black;
    }

    .dropdown:hover .dropdown-content {
      display: block;
    }

    @media screen and (max-width: 600px) {

      .topnav a:not(:first-child),
      .dropdown .dropbtn {
        display: none;
      }

      .topnav a.icon {
        float: right;
        display: block;
      }
    }

    @media screen and (max-width: 600px) {
      .topnav.responsive {
        position: relative;
      }

      .topnav.responsive .icon {
        position: absolute;
        right: 0;
        top: 0;
      }

      .topnav.responsive a {
        float: none;
        display: block;
        text-align: left;
      }

      .topnav.responsive .dropdown {
        float: none;
      }

      .topnav.responsive .dropdown-content {
        position: relative;
      }

      .topnav.responsive .dropdown .dropbtn {
        display: block;
        width: 100%;
        text-align: left;
      }
    }
  </style>
</head>

<body>

  <div class="topnav" id="myTopnav">
    <a href="/users/dashboard" class="active">Home</a>
    <div class="dropdown">
      <button class="dropbtn">Coins
        <i class="fa fa-caret-down"></i>
      </button>
      <div class="dropdown-content">
        <a href="/users/chart">Bitcoin</a>
        <a href="#">Ethereum</a>
        <a href="#">XRP</a>
      </div>
    </div>
    <div class="topnav-right">
      <a href="/users/assets" style="text-align: right;">Hello <%= user.charAt(0).toUpperCase() + user.slice(1) %></a>
      <a href="/users/logout">Logout</a>

    </div>

    <a href="javascript:void(0);" style="font-size:15px;" class="icon" onclick="myFunction()">&#9776;</a>
  </div>

  <script>
    //var io = require('socket.io').listen(3000);

    function myFunction() {
      var x = document.getElementById("myTopnav");
      if (x.className === "topnav") {
        x.className += " responsive";
      } else {
        x.className = "topnav";
      }
    }

  </script>
  <style type="text/css">
    .tg {
      border-collapse: collapse;
      border-spacing: 0;
    }

    .tg td {
      border-color: rgb(255, 255, 255);
      border-style: solid;
      border-left-width: 100px;
      border-bottom-width: 100px;
      font-family: Arial, Helvetica, sans-serif, sans-serif;
      font-size: 20px;
      overflow: hidden;
      padding: 0px 50px;
      word-break: normal;
    }

    .tg th {
      border-color: rgb(255, 255, 255);
      border-style: solid;
      border-width: 100px;
      font-family: Arial, sans-serif;
      font-size: 14px;
      font-weight: normal;
      overflow: hidden;
      padding: 0px 50px;
      word-break: normal;
    }

    .tg .tg-nrix {
      text-align: center;
      vertical-align: middle
    }

    .tg .tg-0lax {
      text-align: left;
      vertical-align: top
    }
  </style>
  <table class="tg">
    <thead>
      <tr>
        <th class="tg-nrix">Coin</th>
        <th class="tg-0lax">Total</th>
        <th class="tg-0lax">Orders</th>
        <th class="tg-0lax">Amount in USD</th>
        <th class="tg-0lax">Price</th>
        <th class="tg-0lax">Trade</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="tg-0lax"><img alt="Poster" src="/users/btcI" width="40px" height="40px"></td>
        <td id="amountBTC" class="tg-0lax"><%= btc %></td>
        <td class="tg-0lax"><%= amount %></td>
        <td id="amountUSD" class="tg-0lax">loading...</td>
        <td id="btcPrice" class="tg-0lax">loading...</td>
        <td class="tg-0lax"><a href="/users/chart" style="text-decoration:none">Trade</a></td>
      </tr>
      <tr>
        <td class="tg-0lax"><img alt="Poster" src="/users/ethI" width="40px" height="40px"></td>
        <td class="tg-0lax"><%= eth %></td>
        <td class="tg-0lax">0</td>
        <td id="amountUSD" class="tg-0lax">loading...</td>
        <td id="btcPrice" class="tg-0lax">loading...</td>
        <td class="tg-0lax"><a href="/users/chart" style="text-decoration:none">Trade</a></td>
      </tr>
      <tr>
        <td class="tg-0lax"><img alt="Poster" src="/users/xrpI" width="40px" height="40px"></td>
        <td class="tg-0lax"><%= xrp %></td>
        <td class="tg-0lax">0</td>
        <td id="amountUSD" class="tg-0lax">loading...</td>
        <td id="btcPrice" class="tg-0lax">loading...</td>
        <td class="tg-0lax"><a href="/users/chart" style="text-decoration:none">Trade</a></td>
      </tr>
      <tr>
        <td class="tg-0lax"><img alt="Poster" src="/users/bnbI" width="40px" height="40px"></td>
        <td class="tg-0lax">0</td>
        <td class="tg-0lax">0</td>
        <td id="amountUSD" class="tg-0lax">loading...</td>
        <td id="btcPrice" class="tg-0lax">loading...</td>
        <td class="tg-0lax"><a href="/users/chart" style="text-decoration:none">Trade</a></td>
      <tr>
        <td class="tg-0lax"><img alt="Poster" src="/users/adaI" width="40px" height="40px"></td>
        <td class="tg-0lax">0</td>
        <td class="tg-0lax">0</td>
        <td id="amountUSD" class="tg-0lax">loading...</td>
        <td id="btcPrice" class="tg-0lax">loading...</td>
        <td class="tg-0lax"><a href="/users/chart" style="text-decoration:none">Trade</a></td>
      </tr>
      
      </tr>
    </tbody>
  </table>
  <script>
    var socket = io.connect('http://127.0.0.1:3000/');

    fetch(`http://127.0.0.1:9665/fetchAPI?endpoint=https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=4h&limit=50000`)
    .then(res => res.json())
    .then(data => {
      const cdata = data.map(d => {
        return { time: d[0] / 1000, open: parseFloat(d[1]), high: parseFloat(d[2]), low: parseFloat(d[3]), close: parseFloat(d[4]) }
      });
      //candleSeries.setData(cdata);
      cdata.forEach(e => {
        //log(e.high);
        

      });
    })
    .catch(err => log(err))

    socket.on('KLINE_BTC_1m', (pl) => {
      console.log(pl.open);
      //candleSeries.update(pl);
      var percentage = 0;
      //document.forms[1].coin.value = pl.close;
      console.log();
      var amountUSD = document.getElementById('amountBTC').innerHTML * pl.close;
      console.log("amountUSD" + amountUSD);
      document.getElementById('amountUSD').innerHTML = amountUSD + " USD";
      document.getElementById('btcPrice').innerHTML = pl.close + " USD";
      //var amountBuyUSD = pl.close * amountBuyBTC;
      //document.getElementById('coin').value = amountBuyUSD;
    });
    socket.on('KLINE_BTC_1d', (pl) => {
      console.log(pl.open + "open");
      console.log(pl.close + "close");
      //candleSeries.update(pl);
      var plusMinus = "";
      var percentage = 0;
      console.log(percentage);
      if (pl.open < pl.close) {
        var plusMinus = "+";
        var increase = pl.open - pl.close;
        percentage = (increase / pl.open) * 100;
        
        
      } else {
        console.log("hi")
        var plusMinus = "-";
        var decrease = pl.open - pl.close;
        percentage = (decrease / pl.open) * 100;
      }
      //document.forms[1].coin.value = pl.close;
      document.getElementById('btc24per').innerHTML = plusMinus + percentage.toFixed(2) + " %";
      //var amountBuyUSD = pl.close * amountBuyBTC;
      //document.getElementById('coin').value = amountBuyUSD;
    });

  </script>

</body>

</html>